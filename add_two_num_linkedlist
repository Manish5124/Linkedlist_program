/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
     ListNode curr1 = l1;
     ListNode curr2 = l2;
      
     ListNode dummyNode = new ListNode();
     ListNode curr  = dummyNode;
        
     int carry =0;
        
      while(curr1 != null || curr2!= null)
      {
          int sum = carry;
          
          if(curr1!=null)
          {
              sum+= curr1.val;
              curr1=curr1.next;
          }
          
          if(curr2!=null)
          {
              sum+=curr2.val;
              curr2 = curr2.next;
          }
          int curentDigit = sum%10;
          carry = sum/10;
          
          curr.next = new ListNode(curentDigit);
          curr = curr.next;
          
      }
         if(carry ==1)
         {
             curr.next = new ListNode(1);
         }
        
        return dummyNode.next;
    }
} 